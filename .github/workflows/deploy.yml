name: Build and Deploy Bakasura App

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allow manual triggering

# --- Your Specific Configuration ---
env:
  AZURE_CONTAINER_REGISTRY: 'bakasura'
  AZURE_RESOURCE_GROUP: 'MyAgentResourceGroup'
  AZURE_CONTAINER_APP: 'bakasura'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Get the code from your repository
      - name: Checkout code
        uses: actions/checkout@v4
       
      # 2. Log in to Azure using the Service Principal secret
      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
       
      # 3. Log in to the Azure Container Registry
      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
       
      # 4. Build and push the Docker image to ACR
      - name: Build and Push Docker Image
        run: |
          docker build . -t ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.AZURE_CONTAINER_APP }}:${{ github.run_number }}
          docker build . -t ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.AZURE_CONTAINER_APP }}:latest
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.AZURE_CONTAINER_APP }}:${{ github.run_number }}
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.AZURE_CONTAINER_APP }}:latest
       
      # 5. Update Container App secrets before deployment
      - name: Update Container App Secrets
        run: |
          echo "Updating secrets in Azure Container App..."
          az containerapp secret set \
            --name ${{ env.AZURE_CONTAINER_APP }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --secrets \
              azure-openai-api-key="${{ secrets.AZURE_OPENAI_API_KEY }}" \
              azure-openai-endpoint="${{ secrets.AZURE_OPENAI_ENDPOINT }}" \
              azure-openai-api-version="${{ secrets.AZURE_OPENAI_API_VERSION }}" \
              azure-openai-embedding-deployment="${{ secrets.AZURE_OPENAI_EMBEDDING_DEPLOYMENT }}" \
              azure-search-endpoint="${{ secrets.AZURE_SEARCH_ENDPOINT }}" \
              azure-search-key="${{ secrets.AZURE_SEARCH_KEY }}" \
              azure-search-index-name="${{ secrets.AZURE_SEARCH_INDEX_NAME }}" \
              azure-vision-endpoint="${{ secrets.AZURE_VISION_ENDPOINT }}" \
              azure-vision-key="${{ secrets.AZURE_VISION_KEY }}" \
              chunk-overlap="${{ secrets.CHUNK_OVERLAP }}" \
              chunk-size="${{ secrets.CHUNK_SIZE }}" \
              max-files="${{ secrets.MAX_FILES }}"
          echo "Secrets updated successfully!"

      # 6. Deploy the new image to Azure Container Apps
      - name: Deploy to Azure Container App
        uses: azure/container-apps-deploy-action@v2
        with:
          imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.AZURE_CONTAINER_APP }}:${{ github.run_number }}
          resourceGroup: ${{ env.AZURE_RESOURCE_GROUP }}
          containerAppName: ${{ env.AZURE_CONTAINER_APP }}
          environmentVariables: |
            AZURE_OPENAI_API_KEY=secretref:azure-openai-api-key
            AZURE_OPENAI_ENDPOINT=secretref:azure-openai-endpoint
            AZURE_OPENAI_API_VERSION=secretref:azure-openai-api-version
            AZURE_OPENAI_EMBEDDING_DEPLOYMENT=secretref:azure-openai-embedding-deployment
            AZURE_SEARCH_ENDPOINT=secretref:azure-search-endpoint
            AZURE_SEARCH_KEY=secretref:azure-search-key
            AZURE_SEARCH_INDEX_NAME=secretref:azure-search-index-name
            AZURE_VISION_ENDPOINT=secretref:azure-vision-endpoint
            AZURE_VISION_KEY=secretref:azure-vision-key
            CHUNK_OVERLAP=secretref:chunk-overlap
            CHUNK_SIZE=secretref:chunk-size
            MAX_FILES=secretref:max-files

      # 7. Verify deployment
      - name: Verify Deployment
        run: |
          echo "Deployment completed successfully!"
          echo "Image: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.AZURE_CONTAINER_APP }}:${{ github.run_number }}"
          echo "Checking container app status..."
          az containerapp show \
            --name ${{ env.AZURE_CONTAINER_APP }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --query "properties.provisioningState" -o tsv